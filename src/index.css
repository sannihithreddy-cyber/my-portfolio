@import "tailwindcss";

/* Theme variables and base */
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222 12% 12%;
    --primary: 259 84% 64%;
    --primary-foreground: 0 0% 100%;
    --secondary: 220 14% 96%;
    --secondary-foreground: 222 12% 12%;
    --card: 0 0% 100%;
    --border: 220 13% 90%;
    --input: 220 13% 90%;
  }
  .dark {
    --background: 222 47% 5%;
    --foreground: 210 40% 96%;
    --primary: 259 84% 64%;
    --primary-foreground: 0 0% 100%;
    --secondary: 217 33% 17%;
    --secondary-foreground: 210 40% 96%;
    --card: 222 47% 7%;
    --border: 217 33% 20%;
    --input: 217 33% 20%;
  }

  * { border-color: hsl(var(--border)); }
  html { scroll-behavior: smooth; }
  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    transition-property: color, background-color;
    transition-duration: 300ms;
  }
  #root { max-width: 100%; margin: 0 auto; padding: 0; text-align: center; }
}

/* Color utilities that map to CSS vars so we can use Tailwind-like tokens */
@layer utilities {
  .bg-background { background-color: hsl(var(--background)); }
  .bg-card { background-color: hsl(var(--card)); }
  .bg-secondary { background-color: hsl(var(--secondary)); }
  .text-foreground { color: hsl(var(--foreground)); }
  .text-muted-foreground { color: hsl(var(--foreground) / 0.7); }
  .text-secondary-foreground { color: hsl(var(--secondary-foreground)); }
  .text-primary { color: hsl(var(--primary)); }
  .text-primary-foreground { color: hsl(var(--primary-foreground)); }
  .border-border { border-color: hsl(var(--border)); }
  .border-input { border-color: hsl(var(--input)); }

  .container { margin-inline: auto; padding-inline: 2rem; }
  @media (min-width: 640px) { .container { max-width: 640px; } }
  @media (min-width: 768px) { .container { max-width: 768px; } }
  @media (min-width: 1024px) { .container { max-width: 1024px; } }
  @media (min-width: 1280px) { .container { max-width: 1280px; } }

  .text-glow { position: relative; text-shadow: 0 0 10px rgba(167, 139, 250, 0.5); }
  .card-hover { @apply transition-transform duration-300 hover:scale-105 hover:shadow-lg; }

  .gradient-border {
    position: relative;
    border-radius: 0.5rem;
    background: linear-gradient(to right, hsl(var(--card)), hsl(var(--card)) ) padding-box,
                linear-gradient(to right, hsl(var(--card)), hsl(var(--card))) border-box;
    border: 1px solid transparent;
  }

  .cosmic-button {
    @apply px-6 py-2 rounded-full font-medium transition-all duration-300 hover:shadow;
    background-color: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
    box-shadow: 0 0 10px rgba(139, 92, 246, 0.5);
  }

  .star {
    position: absolute; border-radius: 9999px; background: white; box-shadow: 0 0 10px rgba(255,255,255,0.4);
  }
  .meteor {
    position: absolute; background: linear-gradient(to right, white, white, transparent); border-radius: 9999px; box-shadow: 0 0 5px rgba(255,255,255,0.3);
  }

  /* Animations */
  @keyframes float { 0%,100% { transform: translateY(0); } 50% { transform: translateY(-4px); } }
  @keyframes pulse-subtle { 0%,100% { opacity: .8 } 50% { opacity: 1 } }
  @keyframes fade-in { from { opacity: 0; transform: translateX(-8px); } to { opacity: 1; transform: translateX(0); } }
  @keyframes meteor { from { transform: rotate(45deg) translateX(0); opacity: 1; } to { transform: rotate(45deg) translateX(1000px); opacity: 0; } }

  .animate-float { animation: float 4s ease-in-out infinite; }
  .animate-pulse-subtle { animation: pulse-subtle 4s ease-in-out infinite; }
  .animate-fade-in { animation: fade-in 0.8s ease forwards; }
  .animate-fade-in-delay-1 { animation: fade-in 0.8s ease 0.2s forwards; }
  .animate-fade-in-delay-2 { animation: fade-in 0.8s ease 0.4s forwards; }
  .animate-fade-in-delay-3 { animation: fade-in 0.8s ease 0.6s forwards; }
  .animate-fade-in-delay-4 { animation: fade-in 0.8s ease 0.8s forwards; }
  .animate-meteor { animation: meteor 1.5s linear infinite; }
  .animate-grow { animation: grow 1.5s ease-out both; }
  @keyframes grow { from { transform: scaleX(0); } to { transform: scaleX(1); } }

  .text-gradient { background: linear-gradient(90deg, hsl(var(--primary)) 0%, hsl(var(--foreground)) 100%); -webkit-background-clip: text; background-clip: text; color: transparent; }
}
